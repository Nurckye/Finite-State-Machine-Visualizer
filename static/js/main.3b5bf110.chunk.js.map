{"version":3,"sources":["Components/TopBar.jsx","Components/Canvas.jsx","Components/LeftPanel.jsx","Components/LayoutController.jsx","App.js","serviceWorker.js","index.js"],"names":["PlayIcon","width","height","viewBox","fill","xmlns","d","ReloadToInitialIcon","cx","cy","rx","ry","TopBar","props","useState","started","changeStarted","useEffect","startX","scrollLeft","slider","document","getElementsByClassName","isDown","addEventListener","e","classList","add","pageX","offsetLeft","remove","preventDefault","walk","canTransitionHappen","transition","sensor","environment","dependsOn","dep","sensors","Array","isArray","limit","value","valueType","Math","abs","relativeToEnviron","foundOne","requires","forEach","rq","which","meetsRequirements","Fragment","className","Object","entries","transitions","map","ix","k","v","currentNode","key","onClick","stepInGraph","style","backgroundColor","label","cursor","states","length","disabled","initial","initDiagram","go","defineFigureGenerator","shape","w","h","param1","parameter1","NaN","isNaN","rad","geo","fig","Arc","close","spot1","spot2","defaultStretch","Uniform","$","make","diagram","text","color","model","linkKeyProperty","nodeTemplate","margin","stroke","nodeTemplateMap","linkTemplate","curve","Bezier","curviness","adjusting","Stretch","reshapable","relinkableFrom","relinkableTo","toShortLength","toArrow","0","0.7","1","textAlign","font","makeTwoWay","Canvas","state","transitionGraph","nextNode","setState","diagramRef","current","getDiagram","commit","m","data","nodeDataArray","nd","set","setCurrentNodeLayout","React","createRef","divClassName","ref","this","linkDataArray","onModelChange","incrementData","Component","ErrorIcon","fillRule","clipRule","useStyles","makeStyles","root","rail","opacity","thumb","border","marginTop","marginLeft","boxShadow","mark","markActive","valuetext","RangeSlider","classes","Typography","id","gutterBottom","Slider","onChange","event","newValue","handleChangeValue","valueLabelDisplay","aria-labelledby","getAriaValueText","min","step","max","SimpleSlider","DescriptionArea","currentState","name","information","TabSelector","selectedTab","setSelectedTab","changeTab","ToogleSwitch","env","isOpen","changeIsOpen","type","defaultChecked","envChangeBool","LeftPanel","isLoaded","currentTab","errored","errorMessage","sensorChange","inputValue","target","temp_sensors","assign","machineSetter","envChange","temp_environment","limitsChange","renderBottomView","values","htmlFor","onInput","message","loadedMachine","machineJson","getElementById","JSON","parse","sensorsSeenList","newSensors","minValue","maxValue","envSeenList","newEnv","statesSeenList","newStates","st","initialStateSet","category","nodeArr","tr","from","to","dp","transitionArr","tab","cols","loadMachine","err","resetToInitial","renderLoader","display","defaultInformation","ProjectInfoPopUp","changeOpen","eventName","handler","element","window","savedHandler","useRef","eventListener","removeEventListener","useEventListener","useCallback","InfoIcon","PopUp","displayPopUp","left","top","popUpInfo","details","LayoutController","limits","includes","res","split","info","pageY","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.3b5bf110.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst PlayIcon = () => (\n  <svg\n    width=\"36\"\n    height=\"32\"\n    viewBox=\"0 0 36 42\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M36 21L0 41.7846V0.215391L36 21Z\" fill=\"#202020\" />\n  </svg>\n);\n\nconst ReloadToInitialIcon = () => (\n  <svg\n    width=\"36\"\n    height=\"30\"\n    viewBox=\"0 0 36 30\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M31.3043 15C31.3043 11.7572 30.2077 8.60165 28.1789 6.00635C26.15 3.41105 23.2981 1.51574 20.0507 0.60445C16.8032 -0.306837 13.335 -0.185021 10.1659 0.951642C6.9967 2.08831 4.29727 4.1786 2.47209 6.90927C0.646908 9.63994 -0.205714 12.8639 0.0419945 16.0981C0.289703 19.3322 1.6244 22.4023 3.84607 24.8483C6.06774 27.2943 9.05673 28.9845 12.3651 29.6655C15.6735 30.3465 19.123 29.9817 22.1969 28.6258L15.6522 15H31.3043Z\"\n      fill=\"#202020\"\n    />\n    <ellipse cx=\"15.6522\" cy=\"15\" rx=\"10.9565\" ry=\"10.5\" fill=\"white\" />\n    <path\n      d=\"M29.3479 22.5L22.6957 15L29.3478 15L36 15L29.3479 22.5Z\"\n      fill=\"#202020\"\n    />\n  </svg>\n);\n\nconst isInLimits = (sensor, environment) => {\n  if (Array.isArray(sensor.limit.value))\n    return (\n      sensor.limit.value[0] < sensor.value &&\n      sensor.value < sensor.limit.value[1]\n    );\n  else if (sensor.limit.valueType === \"RELATIVE\")\n    return (\n      sensor.limit.value >\n      Math.abs(sensor.value - environment[sensor.limit.relativeToEnviron].value)\n    );\n  return sensor.value < sensor.limit.value;\n};\n\nconst meetsRequirements = (transition, environment) => {\n  let foundOne = false;\n  transition.requires.forEach((rq) => {\n    if (environment[rq.which].value !== rq.value) {\n      foundOne = true;\n    }\n  });\n\n  if (foundOne) return false;\n  return true;\n};\n\nfunction TopBar(props) {\n  let [started, changeStarted] = useState(false);\n\n  useEffect(() => {\n    let slider = document.getElementsByClassName(\"top-bar\")[0];\n    let isDown = false;\n    let startX;\n    let scrollLeft;\n\n    slider.addEventListener(\"mousedown\", (e) => {\n      isDown = true;\n      slider.classList.add(\"active\");\n      startX = e.pageX - slider.offsetLeft;\n      scrollLeft = slider.scrollLeft;\n    });\n    slider.addEventListener(\"mouseleave\", () => {\n      isDown = false;\n      slider.classList.remove(\"active\");\n    });\n    slider.addEventListener(\"mouseup\", () => {\n      isDown = false;\n      slider.classList.remove(\"active\");\n    });\n    slider.addEventListener(\"mousemove\", (e) => {\n      if (!isDown) return;\n      e.preventDefault();\n      const x = e.pageX - slider.offsetLeft;\n      const walk = (x - startX) * 2;\n      slider.scrollLeft = scrollLeft - walk;\n    });\n  });\n\n  const canTransitionHappen = (transition) => {\n    for (let dep of transition.dependsOn)\n      if (!isInLimits(props.sensors[dep], props.environment)) return false;\n    if (!meetsRequirements(transition, props.environment)) return false;\n    return true;\n  };\n  return (\n    <React.Fragment>\n      <div className=\"top-bar\">\n        {Object.entries(props.transitions).map(([k, v], ix) => (\n          <span>\n            <button\n              className={`transition ${props.currentNode}-${k}`}\n              key={`tr-top${ix}`}\n              onClick={() => props.stepInGraph(k)}\n              style={{\n                backgroundColor: canTransitionHappen(v)\n                  ? \"#9B9B9B\"\n                  : \"rgb(217,83,79)\",\n              }}\n            >\n              {v.label}\n            </button>\n          </span>\n        ))}\n      </div>\n      <button\n        style={{\n          cursor:\n            Object.entries(props.states).length === 0\n              ? \"not-allowed\"\n              : \"pointer\",\n        }}\n        disabled={Object.entries(props.states).length === 0}\n        className=\"start-button\"\n        onClick={() => {\n          props.stepInGraph(started ? null : props.initial);\n          changeStarted(!started);\n        }}\n      >\n        {started ? <ReloadToInitialIcon /> : <PlayIcon />}\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default TopBar;\n","import React, { Component } from \"react\";\nimport * as go from \"gojs\";\nimport TopBar from \"./TopBar\";\nimport { ReactDiagram } from \"gojs-react\";\n\nfunction initDiagram() {\n  go.Shape.defineFigureGenerator(\"Ring\", function (shape, w, h) {\n    var param1 = shape ? shape.parameter1 : NaN;\n    if (isNaN(param1) || param1 < 0) param1 = 8;\n\n    var rad = w / 2;\n    var geo = new go.Geometry();\n    var fig = new go.PathFigure(w, w / 2, true); // clockwise\n    geo.add(fig);\n    fig.add(\n      new go.PathSegment(go.PathSegment.Arc, 0, 360, rad, rad, rad, rad).close()\n    );\n\n    fig.add(\n      new go.PathSegment(\n        go.PathSegment.Arc,\n        0,\n        360,\n        rad,\n        rad,\n        rad - 4,\n        rad - 4\n      ).close()\n    );\n\n    geo.spot1 = new go.Spot(0.156, 0.156);\n    geo.spot2 = new go.Spot(0.844, 0.844);\n    geo.defaultStretch = go.GraphObject.Uniform;\n    return geo;\n  });\n\n  const $ = go.GraphObject.make;\n\n  const diagram = $(go.Diagram, {\n    \"undoManager.isEnabled\": true, // must be set to allow for model change listening\n    // 'undoManager.maxHistoryLength': 0,  // uncomment disable undo/redo functionality\n    \"clickCreatingTool.archetypeNodeData\": {\n      text: \"new node\",\n      color: \"lightblue\",\n    },\n    model: $(go.GraphLinksModel, {\n      linkKeyProperty: \"key\", // IMPORTANT! must be defined for merges and data sync when using GraphLinksModel\n    }),\n  });\n\n  // define a simple Node template\n  diagram.nodeTemplate = $(\n    go.Node,\n    \"Auto\",\n    $(\n      go.Shape,\n      \"Circle\",\n      // Shape.fill is bound to Node.data.color\n      new go.Binding(\"fill\", \"color\")\n    ),\n    $(\n      go.TextBlock,\n      { margin: 4, stroke: \"black\" }, // some room around the text\n      new go.Binding(\"text\", \"name\")\n    )\n  );\n\n  diagram.nodeTemplateMap.add(\n    \"Final\",\n    $(\n      go.Node,\n      \"Auto\",\n      $(go.Shape, \"Ring\", new go.Binding(\"fill\", \"color\")),\n      $(\n        go.TextBlock,\n        { margin: 5, stroke: \"black\" }, // some room around the text\n        new go.Binding(\"text\", \"name\")\n      )\n    )\n  );\n  diagram.linkTemplate = $(\n    go.Link,\n    {\n      curve: go.Link.Bezier,\n      curviness: 50,\n      adjusting: go.Link.Stretch,\n      reshapable: true,\n      relinkableFrom: true,\n      relinkableTo: true,\n      toShortLength: 3,\n    }, // Bezier curve\n    $(go.Shape),\n    $(go.Shape, { toArrow: \"Standard\" }),\n    // $(go.TextBlock, \"left\", { alignmentFocus: new go.Spot(1, 0.5, 3, 0) }, new go.Binding(\"text\").makeTwoWay())\n    $(\n      go.Panel,\n      \"Auto\",\n      $(\n        go.Shape, // the label background, which becomes transparent around the edges\n        {\n          fill: $(go.Brush, \"Radial\", {\n            0: \"rgb(245, 245, 245)\",\n            0.7: \"rgb(245, 245, 245)\",\n            1: \"rgba(245, 245, 245, 0)\",\n          }),\n          stroke: null,\n        }\n      ),\n      $(\n        go.TextBlock,\n        \"transition\",\n        {\n          textAlign: \"center\",\n          font: \"9pt helvetica, arial, sans-serif\",\n          margin: 4,\n        },\n        new go.Binding(\"text\").makeTwoWay()\n      )\n    )\n  );\n\n  return diagram;\n}\n\nclass Canvas extends Component {\n  state = {\n    currentNode: null,\n    states: [],\n    transitions: [],\n    transitionGraph: [],\n    initial: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.diagramRef = React.createRef();\n  }\n\n  stepInGraph = (nextNode) => {\n    let markedColor = \"#8a8a8a\";\n    let unmarkedColor = \"white\";\n    this.setState({ currentNode: nextNode }, () => {\n      const diagram = this.diagramRef.current.getDiagram();\n      diagram.model.commit((m) => {\n        let data = null;\n        for (let nd of m.nodeDataArray) {\n          m.set(nd, \"color\", unmarkedColor);\n          if (nd.key == nextNode) {\n            data = nd;\n          }\n        }\n        m.set(data, \"color\", markedColor);\n      }, \"increment\");\n      this.props.setCurrentNodeLayout(nextNode);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <ReactDiagram\n          initDiagram={initDiagram}\n          divClassName=\"diagram-component\"\n          ref={this.diagramRef}\n          nodeDataArray={this.props.nodeDataArray}\n          linkDataArray={this.props.linkDataArray}\n          onModelChange={() => {}}\n        />\n\n        <TopBar\n          initial={this.props.initial}\n          stepInGraph={this.stepInGraph}\n          incrementData={this.incrementData}\n          states={this.props.states}\n          sensors={this.props.sensors}\n          environment={this.props.environment}\n          currentNode={this.state.currentNode}\n          transitions={\n            this.state.currentNode !== null\n              ? this.props.transitionGraph[this.state.currentNode]\n              : {}\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","import React, { Component, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst ErrorIcon = () => (\n  <svg\n    width=\"46\"\n    height=\"46\"\n    viewBox=\"0 0 46 46\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M31.2792 37.2599L36.6033 31.9358L27.9517 23.2842L36.6032 14.6327L31.2791 9.30857L22.6276 17.9601L13.9759 9.30841L8.65179 14.6325L17.3035 23.2842L8.65168 31.936L13.9758 37.2601L22.6276 28.6083L31.2792 37.2599Z\"\n      fill=\"white\"\n    />\n  </svg>\n);\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n    color: \"#1c1c1c\",\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: \"#bfbfbf\",\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  mark: {\n    backgroundColor: \"#bfbfbf\",\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: \"currentColor\",\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nfunction RangeSlider(props) {\n  const classes = useStyles();\n  // const [value, setValue] = React.useState(props.defaultValue);\n\n  const handleChange = (event, newValue) => {\n    props.handleChangeValue(newValue);\n    // setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        {props.label}\n      </Typography>\n      <Slider\n        value={props.value}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n        min={props.min}\n        step={props.step}\n        max={props.max}\n      />\n    </div>\n  );\n}\n\nfunction SimpleSlider(props) {\n  const classes = useStyles();\n  // const [value, setValue] = React.useState(props.defaultValue);\n\n  const handleChange = (event, newValue) => {\n    // setValue(newValue);\n    props.handleChangeValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        {props.label}\n      </Typography>\n      <Slider\n        value={props.value}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n        min={props.min}\n        step={props.step}\n        max={props.max}\n      />\n    </div>\n  );\n}\n\nconst DescriptionArea = (props) => {\n  return (\n    <div className=\"information-area\">\n      <h1>{props.currentState.name}</h1>\n      <p>{props.currentState.information}</p>\n    </div>\n  );\n};\n\nconst TabSelector = (props) => {\n  const [selectedTab, setSelectedTab] = useState(\"Sensors\");\n  return (\n    <div className=\"tab-options\">\n      {[\"Sensors\", \"Limits\", \"Internal State\"].map((value, ix) => (\n        <button\n          key={ix}\n          style={{ color: value === selectedTab ? \"#0F0F0F\" : \"#B9B9B9\" }}\n          onClick={() => {\n            props.changeTab(value);\n            setSelectedTab(value);\n          }}\n        >\n          {value}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nfunction ToogleSwitch(props) {\n  const [isOpen, changeIsOpen] = useState(props.env.value);\n  return (\n    <React.Fragment>\n      <span>{props.env.label}</span>\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={props.env.value}\n          onChange={() => {\n            props.envChangeBool(props.env.key)(!isOpen);\n            changeIsOpen(!isOpen);\n          }}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n    </React.Fragment>\n  );\n}\n\nclass LeftPanel extends Component {\n  state = {\n    isLoaded: false,\n    currentTab: \"Sensors\",\n    errored: false,\n    errorMessage: \"\",\n  };\n\n  setErrorMessageLoading(message) {}\n\n  loadMachine() {\n    let loadedMachine;\n    let seenList;\n    let machineJson = document.getElementById(\"textarea-json\").value;\n    try {\n      loadedMachine = JSON.parse(machineJson);\n    } catch {\n      throw \"Invalid JSON format\";\n    }\n\n    if (\n      !(\"environment\" in loadedMachine) ||\n      !(\"sensors\" in loadedMachine) ||\n      !(\"states\" in loadedMachine) ||\n      !(\"transitions\" in loadedMachine)\n    )\n      throw `Missing fields for finite state machine`;\n\n    let sensorsSeenList = {};\n    let newSensors = {};\n    loadedMachine.sensors.forEach((sensor) => {\n      if (sensorsSeenList[sensor.key])\n        throw `Duplicate key for sensors: ${sensor.key}`;\n      if (\n        typeof sensor.minValue !== \"number\" ||\n        typeof sensor.maxValue !== \"number\"\n      )\n        throw `Minimum and maximum values for sensor ${sensor.key} must be real numbers`;\n      if (sensor.minValue >= sensor.maxValue)\n        throw `Maximum value for sensor ${sensor.key} must be strictly greater than the minimum value`;\n      if (!sensor.limit.label)\n        throw `Limit label for sensor ${sensor.key} must be set`;\n      if (!sensor.limit.label)\n        throw `Limit label for sensor ${sensor.key} must be set`;\n      if (\n        typeof sensor.limit.min !== \"number\" ||\n        typeof sensor.limit.max !== \"number\"\n      )\n        throw `Minimum and maximum limit thresholds for sensor ${sensor.key} must be real numbers`;\n      if (sensor.limit.minValue >= sensor.limit.maxValue)\n        throw `Maximum limit threshold value for sensor ${sensor.key} must be strictly greater than the minimum value`;\n      if (\n        sensor.limit.valueType !== \"NUMBER\" &&\n        sensor.limit.valueType !== \"RANGE\" &&\n        sensor.limit.valueType !== \"RELATIVE\"\n      )\n        throw `Limit value type of sensor ${sensor.key} must either NUMBER, RANGE or RELATIVE`;\n\n      sensorsSeenList[sensor.key] = true;\n      newSensors[sensor.key] = sensor;\n    });\n    this.props.machineSetter.sensors(newSensors);\n\n    let envSeenList = {};\n    let newEnv = {};\n    loadedMachine.environment.forEach((env) => {\n      if (envSeenList[env.key])\n        throw `Duplicate key for internal state: ${env.key}`;\n      if (env.type !== \"BOOL\" && env.type !== \"FLOAT\")\n        throw `Type for internal state ${env.key} must be either BOOL or FLOAT`;\n      if (env.type === \"BOOL\" && typeof env.value !== \"boolean\")\n        throw `Value for internal state ${env.key} must be either true or false`;\n      if (env.type === \"FLOAT\" && typeof env.value !== \"number\") {\n        throw `Value for internal state ${env.key} must be a real number`;\n      }\n\n      envSeenList[env.key] = true;\n      newEnv[env.key] = env;\n    });\n    this.props.machineSetter.environment(newEnv);\n\n    let statesSeenList = {};\n    let newStates = {};\n    loadedMachine.states.forEach((st) => {\n      if (statesSeenList[st.key]) throw `Duplicate key for states: ${st.key}`;\n      statesSeenList[st.key] = true;\n      newStates[st.key] = st;\n    });\n    this.props.machineSetter.states(newStates);\n\n    let initialStateSet = false;\n    loadedMachine.states.forEach((st, ix) => {\n      if (st.category === \"Initial\") {\n        if (initialStateSet) throw \"Two initial states detected!\";\n        initialStateSet = true;\n        this.props.machineSetter.initial(st.key);\n      }\n    });\n\n    let nodeArr = Object.values(newStates).map((state, ix) => {\n      return {\n        key: state.key,\n        name: `Q${state.key}`,\n        color: \"white\",\n        text: \"empty\",\n        category: state.category,\n      };\n    });\n    this.props.machineSetter.nodeDataArray(nodeArr);\n\n    loadedMachine.transitions.forEach((tr) => {\n      if (!tr.label)\n        throw `Missing label for transition - node ${tr.from} to node ${tr.to}`;\n\n      if (!(tr.from in statesSeenList) || !(tr.to in statesSeenList))\n        throw `Broken link for transition - node ${tr.from} to node ${tr.to}`;\n      tr.dependsOn.forEach((dp) => {\n        if (!(dp in sensorsSeenList))\n          throw `Sensor for key ${dp} was not declared - node ${tr.from} to node ${tr.to}`;\n      });\n      tr.requires.forEach((rq) => {\n        if (!(rq.which in envSeenList))\n          throw `Internal state for key ${rq.which} was not declared - node ${tr.from} to node ${tr.to}`;\n        if (typeof rq.value !== \"boolean\")\n          throw `Internal state for key ${rq.which} must be either true or false - node ${tr.from} to node ${tr.to}`;\n      });\n    });\n    this.props.machineSetter.transitions(loadedMachine.transitions);\n    const transitionGraph = {};\n    loadedMachine.states.forEach((state) => (transitionGraph[state.key] = {}));\n\n    loadedMachine.transitions.forEach((transition) => {\n      transitionGraph[transition.from][transition.to] = {\n        label: transition.label,\n        information: transition.information,\n        dependsOn: transition.dependsOn,\n        requires: transition.requires,\n      };\n    });\n    this.props.machineSetter.transitionGraph(transitionGraph);\n\n    let transitionArr = loadedMachine.transitions.map((transition) => {\n      return {\n        from: transition.from,\n        to: transition.to,\n        text: transition.label,\n      };\n    });\n    this.props.machineSetter.linkDataArray(transitionArr);\n\n    this.setState({ isLoaded: true, errored: false, errorMessage: \"\" });\n  }\n\n  sensorChange = (key) => (e) => {\n    let inputValue = e.target.value;\n    let temp_sensors = Object.assign({}, this.props.sensors);\n    temp_sensors[key].value = inputValue;\n    this.props.machineSetter.sensors(temp_sensors);\n  };\n\n  envChange = (key) => (e) => {\n    let inputValue = e.target.value;\n    let temp_environment = Object.assign({}, this.props.environment);\n    temp_environment[key].value = inputValue;\n    this.props.machineSetter.environment(temp_environment);\n  };\n\n  envChangeBool = (key) => (value) => {\n    let temp_environment = Object.assign({}, this.props.environment);\n    temp_environment[key].value = value;\n    this.props.machineSetter.environment(temp_environment);\n  };\n\n  limitsChange = (key) => (value) => {\n    let temp_sensors = Object.assign({}, this.props.sensors);\n    temp_sensors[key].limit.value = value;\n    this.props.machineSetter.sensors(temp_sensors);\n  };\n\n  renderBottomView = () => {\n    switch (this.state.currentTab) {\n      case \"Sensors\":\n        return (\n          <div className=\"sensors\">\n            {Object.values(this.props.sensors).map((sensor, ix) => (\n              <div className=\"value-input\" key={`sens${ix}`}>\n                <label className=\"input-label\" htmlFor={sensor.name}>\n                  {sensor.name}\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"\"\n                  id={sensor.name}\n                  value={sensor.value}\n                  onInput={this.sensorChange(sensor.key)}\n                />\n              </div>\n            ))}\n          </div>\n        );\n\n      case \"Limits\":\n        return Object.values(this.props.sensors).map((sensor, ix) => (\n          <div key={`lim${ix}`} className=\"slide-box\">\n            {sensor.limit.valueType === \"RANGE\" ? (\n              <RangeSlider\n                value={sensor.limit.value}\n                label={sensor.limit.label}\n                min={sensor.limit.min}\n                max={sensor.limit.max}\n                step={sensor.limit.step}\n                handleChangeValue={this.limitsChange(sensor.key)}\n              />\n            ) : (\n              <SimpleSlider\n                value={sensor.limit.value}\n                label={sensor.limit.label}\n                min={sensor.limit.min}\n                max={sensor.limit.max}\n                step={sensor.limit.step}\n                handleChangeValue={this.limitsChange(sensor.key)}\n              />\n            )}\n          </div>\n        ));\n\n      case \"Internal State\":\n        return (\n          <div className=\"internal-state\">\n            {Object.values(this.props.environment).map((env, ix) => {\n              if (env.type === \"FLOAT\")\n                return (\n                  <div className=\"value-input\" key={`is${ix}`}>\n                    <label className=\"input-label\" htmlFor={env.label}>\n                      {env.label}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"\"\n                      id={env.label}\n                      value={env.value}\n                      onInput={this.envChange(env.key)}\n                    />\n                  </div>\n                );\n              else if (env.type === \"BOOL\")\n                return (\n                  <div className=\"value-input\">\n                    <ToogleSwitch\n                      env={env}\n                      envChangeBool={this.envChangeBool}\n                    />\n                  </div>\n                );\n            })}\n          </div>\n        );\n    }\n  };\n\n  renderLoader() {\n    if (!this.state.isLoaded)\n      return (\n        <div className=\"json-input\">\n          <textarea id=\"textarea-json\" cols=\"39\"></textarea>\n          <button\n            onClick={() => {\n              try {\n                this.loadMachine();\n              } catch (err) {\n                this.setState(\n                  {\n                    errored: true,\n                    errorMessage: err,\n                  },\n                  () => this.props.machineSetter.resetToInitial()\n                );\n              }\n            }}\n          >\n            Load machine\n          </button>\n        </div>\n      );\n    else\n      return (\n        <React.Fragment>\n          <TabSelector\n            changeTab={(tab) => this.setState({ currentTab: tab })}\n          />\n          {this.renderBottomView()}\n        </React.Fragment>\n      );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"left-panel\">\n          <DescriptionArea currentState={this.props.currentState} />\n          <div className=\"separator-bar\" />\n          {this.renderLoader()}\n        </div>\n        <div\n          className=\"error-container\"\n          style={{ display: this.state.errored ? \"flex\" : \"none\" }}\n        >\n          <div className=\"error-message\">{this.state.errorMessage}</div>\n          <div className=\"error-bubble\">\n            <ErrorIcon />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LeftPanel;\n","import React, {\n  Component,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport Canvas from \"./Canvas\";\nimport LeftPanel from \"./LeftPanel\";\n\nconst defaultInformation = {\n  name: \"Simulator pentru automat finit determinist\",\n  information:\n    \"Acesta este simulatorul creat de Nitescu Radu, Tae Andreea, Stefan Andreea, Pinzariu Denis si Chelu Madalina pentru drona de livrat pachete. Incarcati codul atasat automatului pentru a-l reprezenta intr-o forma vizuala.\",\n};\n\nfunction useEventListener(eventName, handler, element = window) {\n  const savedHandler = useRef();\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) return;\n\n    const eventListener = (event) => savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener);\n\n    return () => {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n\nfunction ProjectInfoPopUp(props) {\n  const [isOpen, changeOpen] = useState(false);\n  const handler = useCallback((e) => {\n    if (\n      typeof e.target.className === \"string\" &&\n      e.target.className !== \"pr-info\"\n    )\n      changeOpen(false);\n  }, []);\n  useEventListener(\"click\", handler);\n\n  const InfoIcon = () => (\n    <svg\n      width=\"8\"\n      height=\"32\"\n      viewBox=\"0 0 8 32\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0 28V14.2222C0 12.0131 1.79086 10.2222 4 10.2222C6.20914 10.2222 8 12.0131 8 14.2222V20.8889V28C8 30.2091 6.20914 32 4 32C1.79086 32 0 30.2091 0 28Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M8 4V4.44444C8 6.65358 6.20914 8.44445 4 8.44445C1.79086 8.44445 0 6.65358 0 4.44444V4C0 1.79086 1.79086 0 4 0C6.20914 0 8 1.79086 8 4Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n\n  return (\n    <div\n      className=\"info-container pr-info\"\n      style={{\n        display: Object.values(props.states).length !== 0 ? \"flex\" : \"none\",\n      }}\n    >\n      <table\n        className=\"pr-info\"\n        style={{\n          display: isOpen ? \"flex\" : \"none\",\n        }}\n      >\n        {Object.values(props.states).map((element) => (\n          <tr className=\"pr-info\">\n            <th className=\"pr-info\">{`Q${element.key}`}</th>\n            <th className=\"pr-info\">{element.name}</th>\n          </tr>\n        ))}\n      </table>\n      <button className=\"pr-info\" onClick={() => changeOpen(!isOpen)}>\n        <InfoIcon />\n      </button>\n    </div>\n  );\n}\n\nconst PopUp = (props) => {\n  if (props.displayPopUp !== null)\n    return (\n      <div\n        className=\"pop-up\"\n        style={{ left: props.displayPopUp[0], top: props.displayPopUp[1] + 18 }}\n      >\n        <h1>{props.popUpInfo.name}</h1>\n        <p>{props.popUpInfo.details}</p>\n      </div>\n    );\n  return <div style={{ display: \"none\" }}></div>;\n};\n\nclass LayoutController extends Component {\n  state = {\n    currentNode: null,\n    environment: [],\n    limits: [],\n    sensors: [],\n    states: {},\n    transitions: [],\n    transitionGraph: [],\n    nodeDataArray: [],\n    linkDataArray: [],\n    initial: null,\n    displayPopUp: null,\n    popUpInfo: { name: \"\", details: \"\" },\n  };\n\n  componentDidMount() {\n    window.addEventListener(\n      \"contextmenu\",\n      (e) => {\n        e.preventDefault();\n        if (\n          typeof e.target.className === \"string\" &&\n          e.target.className.includes(\"transition\")\n        ) {\n          let res = e.target.className.split(\" \")[1].split(\"-\");\n          let info = this.state.transitionGraph[res[0]][res[1]].information;\n          this.setState({ popUpInfo: info, displayPopUp: [e.pageX, e.pageY] });\n        } else if (this.state.displayPopUp !== null)\n          this.setState({ displayPopUp: null });\n\n        return false;\n      },\n      false\n    );\n  }\n\n  machineSetter = {\n    sensors: (sensors) => this.setState({ sensors }),\n    environment: (environment) => this.setState({ environment }),\n    states: (states) => this.setState({ states }),\n    transitions: (transitions) => this.setState({ transitions }),\n    transitionGraph: (transitionGraph) => this.setState({ transitionGraph }),\n    initial: (initial) => this.setState({ initial }),\n    nodeDataArray: (nodeDataArray) => this.setState({ nodeDataArray }),\n    linkDataArray: (linkDataArray) => this.setState({ linkDataArray }),\n    resetToInitial: () => {\n      this.setState({\n        currentNode: null,\n        environment: [],\n        limits: [],\n        sensors: [],\n        states: {},\n        transitions: [],\n        transitionGraph: [],\n        nodeDataArray: [],\n        linkDataArray: [],\n        initial: null,\n        displayPopUp: null,\n        popUpInfo: { name: \"\", details: \"\" },\n      });\n    },\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Canvas\n          sensors={this.state.sensors}\n          environment={this.state.environment}\n          states={this.state.states}\n          transitions={this.state.transitions}\n          transitionGraph={this.state.transitionGraph}\n          initial={this.state.initial}\n          setCurrentNodeLayout={(currentNode) => this.setState({ currentNode })}\n          linkDataArray={this.state.linkDataArray}\n          nodeDataArray={this.state.nodeDataArray}\n        />\n        <PopUp\n          popUpInfo={this.state.popUpInfo}\n          displayPopUp={this.state.displayPopUp}\n        />\n        <LeftPanel\n          currentState={\n            this.state.currentNode !== null\n              ? this.state.states[this.state.currentNode]\n              : defaultInformation\n          }\n          sensors={this.state.sensors}\n          environment={this.state.environment}\n          machineSetter={this.machineSetter}\n        />\n        <ProjectInfoPopUp states={this.state.states} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LayoutController;\n","import React from \"react\";\nimport \"./Styles/Canvas.scss\";\nimport \"./Styles/LeftPanel.scss\";\nimport \"./Styles/TopBar.scss\";\nimport \"./Styles/Switch.scss\";\n\nimport LayoutController from \"./Components/LayoutController\";\n\nfunction App() {\n  return <LayoutController />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}